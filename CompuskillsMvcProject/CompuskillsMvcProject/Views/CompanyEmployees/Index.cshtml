@model IEnumerable<MvcProjectDbConn.CompanyEmployee>
@using MvcProjectDbConn;
@using Microsoft.AspNet.Identity
@using System.Collections.Generic;
@{
    ViewBag.Title = "Index";
    int i = 0;
    var user = User.Identity.GetUserId();
    using (TimeSheetDbContext db = new TimeSheetDbContext())
    {
        var employee = db.CompanyEmployees.SingleOrDefault(x => x.EmployeeId == user);
        var employees = db.CompanyEmployees.Where(x => x.CompanyId == employee.CompanyId);
        List<string> role = new List<string>();
        foreach (var item in employees)
        {
            var userRole = db.IdentityUserRoles.SingleOrDefault(x => x.UserId == item.EmployeeId);
            //we need to find all employees roles from this company

            switch (userRole.RoleId)
            {
                case "D2EF7DA3-4C52-4B48-A141-D8E41CE8C7A9":
                    role.Add("Human resources department");
                    break;
                case "602514B5-413F-419D-97A1-2533130D8DC4":
                    role.Add("Ceo");
                    break;
                case "35FB245B-FDE0-464D-9985-CFDD0F2AEB18":
                    role.Add("Employee");
                    break;
                case "DA5E99CF-E875-41DD-8300-9E0101D97D39":
                    role.Add("Finance Department");
                    break;
                case "DA422AC8-7F2D-46AC-AE2C-C536FC98402F":
                    role.Add("Senior managment");
                    break;
            }
        }
        <h2>Employees</h2>

        <p>
            @Html.ActionLink("Create New", "Register","Account")
        </p>

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Employee.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Employee.PhoneNumber)
                </th>
                <th>
                    Role
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PayRate)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)

            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Employee.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Employee.PhoneNumber)
                    </td>
                    <td>

                        @role[i]

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PayRate)
                    </td>

                    <td>
                        @Html.ActionLink("Details", "Details", new { id = item.id }) |
                        |
                        @Html.ActionLink("Set employee pay rate", "SetPayRate", new { id = item.id })
                    </td>
                </tr>
                i++;
            }

        </table>
    }
    <style>
        span {
            margin: 70px;
        }
    </style>
     @Html.ActionLink("Change roles", "ChangeRole")
}
@section scripts{
    @Scripts.Render("~/bundles/jqueryunobtrusive")
    <script>
        $(document).ready(function () {
            "use strict";

            $("span#searchLink").on("click", function () {
                $("div#search").slideToggle();
            })
        });
    </script>
}

  <span id="searchLink">  @Ajax.ActionLink("open/close search", "Search",
  new AjaxOptions { UpdateTargetId = "search" })</span>

<div id="search"></div>